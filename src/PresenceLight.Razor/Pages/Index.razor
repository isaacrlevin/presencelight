@page "/"

@using Microsoft.Identity.Web
@using Microsoft.Graph
@inject ILogger<Index> _logger;
@inject UserAuthService _userAuthService
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _httpContextAccessor

@if (appState.SignedIn)
{
    <SpinLoader IsLoading="@(appState.Presence == null)">
        <LoadingTemplate>
            <div style="height:400px; position:relative; ">
                <Circle style=" margin: 0; position: absolute; top: 50%; left: 50%; -ms-transform: translate(-50%, -50%); transform: translate(-50%, -50%);" Center="true" />
            </div>
        </LoadingTemplate>
        <ContentTemplate>
            <MudPaper Width="100%" Elevation="0">
                <MudContainer MaxWidth="MaxWidth.Small" Style="text-align:center">
                    <MudGrid Class="mt-10" Justify="Justify.FlexStart">
                        <MudItem xs="12">
                            <MudText Typo="Typo.h3">@appState.User?.DisplayName</MudText>
                        </MudItem>
                        <MudItem xs="12">
                            <MudAvatar class="mt-10" Image="@(@appState.ProfileImage != null ? @appState.ProfileImage : "/_content/PresenceLight.Razor/images/unknownprofile.png")" Style="height:300px; width:300px"></MudAvatar>
                            <div class="circle bottom-right @appState.Presence?.Availability"></div>
                        </MudItem>
                        <MudItem Class="mt-n16" xs="12">
                             <MudText Typo="Typo.h5">Availability: @Helpers.HumanifyText(appState.Presence?.Availability)</MudText>
                            <MudText Typo="Typo.h5">Activity: @Helpers.HumanifyText(appState.Presence?.Activity)</MudText>
                        </MudItem>
                    </MudGrid>
                </MudContainer>
            </MudPaper>
        </ContentTemplate>
    </SpinLoader>
}
else
{
    <MudPaper Height="500px" Width="100%" Elevation="0">
        <MudContainer MaxWidth="MaxWidth.Small" Style="text-align:center">
            <MudText Typo="Typo.h6"> Login to Microsoft Account to Sync Presence</MudText>
            <MudButton OnClick="SignIn" Variant="Variant.Filled">Sign In</MudButton>
        </MudContainer>
    </MudPaper>
}

@code {
    string image;
    protected override async Task OnInitializedAsync()
    {
        appState.OnChange += RaiseStateHasChanged;
        bool isUserAuth = await _userAuthService.IsUserAuthenticated();
        if (!isUserAuth && appState.User == null)
        {
            appState.SetLightMode("");

            if (appState.Config.AppType == "Web")
            {
                await _httpContextAccessor.HttpContext.ChallengeAsync();
            }
        }
        else
        {
            if (appState.LightMode != "Custom")
            {
                appState.SignedIn = true;
                image = @appState.ProfileImage != null ? @appState.ProfileImage : "/_content/PresenceLight.Razor/images/unknownprofile.png";
                appState.SetLightMode("Graph");
                _logger.LogInformation("Light Mode: Graph");
            }
        }
    }

    void SignIn()
    {
        _logger.LogInformation("Sign In Requested");
        appState.SignInRequested = true;
    }

    public void Dispose()
    {
        appState.OnChange -= RaiseStateHasChanged;
    }

    private void RaiseStateHasChanged()
    {
        InvokeAsync(StateHasChanged);
    }
}
