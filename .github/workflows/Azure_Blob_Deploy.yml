name: Deploy Worker Apps to Azure Blob Storage

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target of Channel Name to Sign'
        required: true
        default: ''
        type: string

  workflow_call:
    inputs:
      target:
        description: 'Target of Channel Name to Sign'
        required: true
        default: ''
        type: string

jobs:

  Deploy_Worker_Artifacts:
    name: Deploy Worker Artifacts
    environment:
        name: Deploy_Azure_Blob
    permissions:
      id-token: write # Required for requesting the JWT
    runs-on: ubuntu-latest

    steps:
    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Download ${{ inputs.target }} Artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.target }}_Signed
        path: ./Signed/${{ inputs.target }}

    - name: Archive Previous Release
      uses: azure/cli@v2
      with:
        inlineScript: |
          account_name="${{ secrets.ACCOUNT_NAME }}"
          account_key="${{ secrets.ACCOUNT_KEY }}"
          source_container="${{ secrets.WORKER_CONTAINER }}"
          destination_container="${{ secrets.WORKER_ARCHIVE_CONTAINER }}"
          pattern="${{ inputs.target }}"

          # Get a list of blobs in the source container that match the pattern
          blobs=$(az storage blob list --account-name $account_name --account-key $account_key --container-name $source_container --query "[?contains(name, '$pattern')].name" -o tsv)

          # Loop through the blobs and copy each one to the destination container
          for blob in $blobs
          do
            echo "Copying blob $blob from $source_container to $destination_container"

            blob=$(echo $blob | tr -d '\r')

            az storage blob copy start \
              --account-name $account_name \
              --account-key $account_key \
              --destination-container $destination_container \
              --destination-blob $blob \
              --source-account-name $account_name \
              --source-account-key $account_key \
              --source-container $source_container \
              --source-blob $blob

            echo "Deleting blob $blob from $source_container"
            az storage blob delete \
              --account-key $account_key \
              --account-name $account_name \
              --container-name $source_container \
              --name $blob
          done
        azcliversion: latest

    - name: Upload Release to Blob Storage
      uses: azure/cli@v2
      with:
        inlineScript: |
          az storage blob upload-batch --connection-string "${{ secrets.AZUREBLOBCONNECTIONSTRING }}" \
          -d "${{ secrets.WORKER_CONTAINER }}" -s "./Signed"
        azcliversion: latest